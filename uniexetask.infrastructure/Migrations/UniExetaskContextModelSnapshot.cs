// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using uniexetask.infrastructure;

#nullable disable

namespace uniexetask.infrastructure.Migrations
{
    [DbContext(typeof(UniExetaskContext))]
    partial class UniExetaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectLabel", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<int>("LabelId")
                        .HasColumnType("int")
                        .HasColumnName("label_id");

                    b.HasKey("ProjectId", "LabelId")
                        .HasName("PK__PROJECT___223D61BAFF76C671");

                    b.HasIndex("LabelId");

                    b.ToTable("PROJECT_LABEL", (string)null);
                });

            modelBuilder.Entity("ProjectMentor", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<int>("MentorId")
                        .HasColumnType("int")
                        .HasColumnName("mentor_id");

                    b.HasKey("ProjectId", "MentorId")
                        .HasName("PK__PROJECT___9224B9F0FC6D694F");

                    b.HasIndex("MentorId");

                    b.ToTable("PROJECT_MENTOR", (string)null);
                });

            modelBuilder.Entity("ProjectSponsor", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<int>("SponsorId")
                        .HasColumnType("int")
                        .HasColumnName("sponsor_id");

                    b.HasKey("ProjectId", "SponsorId")
                        .HasName("PK__PROJECT___E79AE35A7A565ABE");

                    b.HasIndex("SponsorId");

                    b.ToTable("PROJECT_SPONSOR", (string)null);
                });

            modelBuilder.Entity("RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int")
                        .HasColumnName("permission_id");

                    b.HasKey("RoleId", "PermissionId")
                        .HasName("PK__ROLE_PER__C85A546393D53628");

                    b.HasIndex("PermissionId");

                    b.ToTable("ROLE_PERMISSION", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Campus", b =>
                {
                    b.Property<int>("CampusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("campus_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CampusId"));

                    b.Property<string>("CampusCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("campus_code");

                    b.Property<string>("CampusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("campus_name");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("location");

                    b.HasKey("CampusId")
                        .HasName("PK__CAMPUS__01989FD1D20DE96D");

                    b.ToTable("CAMPUS", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.ChatGroup", b =>
                {
                    b.Property<int>("ChatGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("chat_group_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatGroupId"));

                    b.Property<string>("ChatboxName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("chatbox_name");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("owner_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("ChatGroupId")
                        .HasName("PK__CHAT_GRO__F18D35793DC5074C");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("OwnerId");

                    b.ToTable("CHAT_GROUP", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.ChatMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("message_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int>("ChatGroupId")
                        .HasColumnType("int")
                        .HasColumnName("chat_group_id");

                    b.Property<string>("MessageContent")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("message_content");

                    b.Property<DateTime>("SendDatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("send_datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("MessageId")
                        .HasName("PK__CHAT_MES__0BBF6EE6642C1C94");

                    b.HasIndex("ChatGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("CHAT_MESSAGE", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("description");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("RegUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("reg_url");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("EventId")
                        .HasName("PK__EVENT__2370F7279EC27DDB");

                    b.ToTable("EVENT", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("group_name");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("GroupId")
                        .HasName("PK__GROUP__D57795A0961D119E");

                    b.HasIndex("ProjectId");

                    b.ToTable("GROUP", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.GroupInvite", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("InviteeId")
                        .HasColumnType("int")
                        .HasColumnName("invitee_id");

                    b.Property<int>("InviterId")
                        .HasColumnType("int")
                        .HasColumnName("inviter_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("GroupId", "NotificationId")
                        .HasName("PK__GROUP_IN__3B720DE21B8DF914");

                    b.HasIndex("NotificationId");

                    b.ToTable("GROUP_INVITE", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.GroupMember", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("role");

                    b.HasKey("GroupId", "StudentId")
                        .HasName("PK__GROUP_ME__67D4A5C909236B5D");

                    b.HasIndex("StudentId");

                    b.ToTable("GROUP_MEMBER", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Label", b =>
                {
                    b.Property<int>("LabelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("label_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LabelId"));

                    b.Property<string>("LabelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("label_name");

                    b.HasKey("LabelId")
                        .HasName("PK__LABEL__E44FFA584979913C");

                    b.ToTable("LABEL", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.MeetingSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("content");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("duration");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<int>("Location")
                        .HasColumnType("int")
                        .HasColumnName("location");

                    b.Property<DateTime>("MeetingDate")
                        .HasColumnType("datetime")
                        .HasColumnName("meeting_date");

                    b.Property<int>("MentorId")
                        .HasColumnType("int")
                        .HasColumnName("mentor_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("ScheduleId")
                        .HasName("PK__MEETING___C46A8A6FE5A602ED");

                    b.HasIndex("GroupId");

                    b.HasIndex("MentorId");

                    b.ToTable("MEETING_SCHEDULE", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Mentor", b =>
                {
                    b.Property<int>("MentorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mentor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MentorId"));

                    b.Property<string>("Specialty")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("specialty");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("title");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("MentorId")
                        .HasName("PK__MENTOR__E5D27EF3F0FC653A");

                    b.HasIndex("UserId");

                    b.ToTable("MENTOR", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Nofitication", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<int>("Message")
                        .HasColumnType("int")
                        .HasColumnName("message");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int")
                        .HasColumnName("receiver_id");

                    b.Property<int>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("sender_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.HasKey("NotificationId")
                        .HasName("PK__NOFITICA__E059842FB5BB2374");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("NOFITICATION", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("permission_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("PermissionId")
                        .HasName("PK__PERMISSI__E5331AFAA7F0158F");

                    b.ToTable("PERMISSION", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("description");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<int>("Score")
                        .HasColumnType("int")
                        .HasColumnName("score");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    b.Property<string>("TopicCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("topic_code");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("topic_name");

                    b.HasKey("ProjectId")
                        .HasName("PK__PROJECT__BC799E1FC9EB9923");

                    b.HasIndex("SubjectId");

                    b.ToTable("PROJECT", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Requirement", b =>
                {
                    b.Property<int>("RequirementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("requirement_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequirementId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("content");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<int>("RequestorId")
                        .HasColumnType("int")
                        .HasColumnName("requestor_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("RequirementId")
                        .HasName("PK__REQUIREM__2A73C1AD5181B1DB");

                    b.HasIndex("ProjectId");

                    b.ToTable("REQUIREMENT", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("resource_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("name");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.Property<int>("UploadBy")
                        .HasColumnType("int")
                        .HasColumnName("upload_by");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("url");

                    b.HasKey("ResourceId")
                        .HasName("PK__RESOURCE__4985FC733E56EC39");

                    b.HasIndex("ProjectId");

                    b.ToTable("RESOURCE", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("RoleId")
                        .HasName("PK__ROLE__760965CC64BDA0EE");

                    b.ToTable("ROLE", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Sponsor", b =>
                {
                    b.Property<int>("SponsorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sponsor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SponsorId"));

                    b.Property<string>("InvestmentField")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("investment_field");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("type");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("SponsorId")
                        .HasName("PK__SPONSOR__BE37D454EF7E9B7D");

                    b.HasIndex("UserId");

                    b.ToTable("SPONSOR", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("major");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("student_code");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("StudentId")
                        .HasName("PK__STUDENT__2A33069AD32336FB");

                    b.HasIndex("UserId");

                    b.ToTable("STUDENT", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("subject_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<int>("Description")
                        .HasColumnType("int")
                        .HasColumnName("description");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("subject_code");

                    b.Property<DateTime>("SubjectName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("subject_name")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SubjectId")
                        .HasName("PK__SUBJECT__5004F6608A050065");

                    b.ToTable("SUBJECT", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("task_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("description");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("due_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("status");

                    b.HasKey("TaskId")
                        .HasName("PK__TASK__0492148D926959F6");

                    b.HasIndex("ProjectId");

                    b.ToTable("TASK", (string)null);
                });

            modelBuilder.Entity("uniexetask.core.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("CampusId")
                        .HasColumnType("int")
                        .HasColumnName("campus_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("status");

                    b.HasKey("UserId")
                        .HasName("PK__USER__B9BE370FA12F3B22");

                    b.HasIndex("CampusId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__USER__AB6E6164B010E360")
                        .IsUnique();

                    b.ToTable("USER", (string)null);
                });

            modelBuilder.Entity("ProjectLabel", b =>
                {
                    b.HasOne("uniexetask.core.Models.Label", null)
                        .WithMany()
                        .HasForeignKey("LabelId")
                        .IsRequired()
                        .HasConstraintName("FK__PROJECT_L__label__5FB337D6");

                    b.HasOne("uniexetask.core.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__PROJECT_L__proje__5EBF139D");
                });

            modelBuilder.Entity("ProjectMentor", b =>
                {
                    b.HasOne("uniexetask.core.Models.Mentor", null)
                        .WithMany()
                        .HasForeignKey("MentorId")
                        .IsRequired()
                        .HasConstraintName("FK__PROJECT_M__mento__778AC167");

                    b.HasOne("uniexetask.core.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__PROJECT_M__proje__76969D2E");
                });

            modelBuilder.Entity("ProjectSponsor", b =>
                {
                    b.HasOne("uniexetask.core.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__PROJECT_S__proje__6EF57B66");

                    b.HasOne("uniexetask.core.Models.Sponsor", null)
                        .WithMany()
                        .HasForeignKey("SponsorId")
                        .IsRequired()
                        .HasConstraintName("FK__PROJECT_S__spons__6FE99F9F");
                });

            modelBuilder.Entity("RolePermission", b =>
                {
                    b.HasOne("uniexetask.core.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .IsRequired()
                        .HasConstraintName("FK__ROLE_PERM__permi__440B1D61");

                    b.HasOne("uniexetask.core.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__ROLE_PERM__role___4316F928");
                });

            modelBuilder.Entity("uniexetask.core.Models.ChatGroup", b =>
                {
                    b.HasOne("uniexetask.core.Models.User", "CreatedByNavigation")
                        .WithMany("ChatGroupCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK__CHAT_GROU__creat__48CFD27E");

                    b.HasOne("uniexetask.core.Models.User", "Owner")
                        .WithMany("ChatGroupOwners")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK__CHAT_GROU__owner__49C3F6B7");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("uniexetask.core.Models.ChatMessage", b =>
                {
                    b.HasOne("uniexetask.core.Models.ChatGroup", "ChatGroup")
                        .WithMany("ChatMessages")
                        .HasForeignKey("ChatGroupId")
                        .IsRequired()
                        .HasConstraintName("FK__CHAT_MESS__chat___4D94879B");

                    b.HasOne("uniexetask.core.Models.User", "User")
                        .WithMany("ChatMessages")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__CHAT_MESS__user___4E88ABD4");

                    b.Navigation("ChatGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("uniexetask.core.Models.Group", b =>
                {
                    b.HasOne("uniexetask.core.Models.Project", "Project")
                        .WithMany("Groups")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__GROUP__project_i__7B5B524B");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("uniexetask.core.Models.GroupInvite", b =>
                {
                    b.HasOne("uniexetask.core.Models.Group", "Group")
                        .WithMany("GroupInvites")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__GROUP_INV__group__14270015");

                    b.HasOne("uniexetask.core.Models.Nofitication", "Notification")
                        .WithMany("GroupInvites")
                        .HasForeignKey("NotificationId")
                        .IsRequired()
                        .HasConstraintName("FK__GROUP_INV__notif__151B244E");

                    b.Navigation("Group");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("uniexetask.core.Models.GroupMember", b =>
                {
                    b.HasOne("uniexetask.core.Models.Group", "Group")
                        .WithMany("GroupMembers")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__GROUP_MEM__group__08B54D69");

                    b.HasOne("uniexetask.core.Models.Student", "Student")
                        .WithMany("GroupMembers")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__GROUP_MEM__stude__09A971A2");

                    b.Navigation("Group");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("uniexetask.core.Models.MeetingSchedule", b =>
                {
                    b.HasOne("uniexetask.core.Models.Group", "Group")
                        .WithMany("MeetingSchedules")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__MEETING_S__group__00200768");

                    b.HasOne("uniexetask.core.Models.Mentor", "Mentor")
                        .WithMany("MeetingSchedules")
                        .HasForeignKey("MentorId")
                        .IsRequired()
                        .HasConstraintName("FK__MEETING_S__mento__01142BA1");

                    b.Navigation("Group");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("uniexetask.core.Models.Mentor", b =>
                {
                    b.HasOne("uniexetask.core.Models.User", "User")
                        .WithMany("Mentors")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__MENTOR__user_id__73BA3083");

                    b.Navigation("User");
                });

            modelBuilder.Entity("uniexetask.core.Models.Nofitication", b =>
                {
                    b.HasOne("uniexetask.core.Models.User", "Receiver")
                        .WithMany("NofiticationReceivers")
                        .HasForeignKey("ReceiverId")
                        .IsRequired()
                        .HasConstraintName("FK__NOFITICAT__recei__0F624AF8");

                    b.HasOne("uniexetask.core.Models.User", "Sender")
                        .WithMany("NofiticationSenders")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK__NOFITICAT__sende__0E6E26BF");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("uniexetask.core.Models.Project", b =>
                {
                    b.HasOne("uniexetask.core.Models.Subject", "Subject")
                        .WithMany("Projects")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("FK__PROJECT__subject__5629CD9C");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("uniexetask.core.Models.Requirement", b =>
                {
                    b.HasOne("uniexetask.core.Models.Project", "Project")
                        .WithMany("Requirements")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__REQUIREME__proje__6383C8BA");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("uniexetask.core.Models.Resource", b =>
                {
                    b.HasOne("uniexetask.core.Models.Project", "Project")
                        .WithMany("Resources")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__RESOURCE__projec__6754599E");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("uniexetask.core.Models.Sponsor", b =>
                {
                    b.HasOne("uniexetask.core.Models.User", "User")
                        .WithMany("Sponsors")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__SPONSOR__user_id__6C190EBB");

                    b.Navigation("User");
                });

            modelBuilder.Entity("uniexetask.core.Models.Student", b =>
                {
                    b.HasOne("uniexetask.core.Models.User", "User")
                        .WithMany("Students")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__STUDENT__user_id__04E4BC85");

                    b.Navigation("User");
                });

            modelBuilder.Entity("uniexetask.core.Models.Task", b =>
                {
                    b.HasOne("uniexetask.core.Models.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK__TASK__project_id__59FA5E80");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("uniexetask.core.Models.User", b =>
                {
                    b.HasOne("uniexetask.core.Models.Campus", "Campus")
                        .WithMany("Users")
                        .HasForeignKey("CampusId")
                        .IsRequired()
                        .HasConstraintName("FK__USER__campus_id__3F466844");

                    b.HasOne("uniexetask.core.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__USER__role_id__403A8C7D");

                    b.Navigation("Campus");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("uniexetask.core.Models.Campus", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("uniexetask.core.Models.ChatGroup", b =>
                {
                    b.Navigation("ChatMessages");
                });

            modelBuilder.Entity("uniexetask.core.Models.Group", b =>
                {
                    b.Navigation("GroupInvites");

                    b.Navigation("GroupMembers");

                    b.Navigation("MeetingSchedules");
                });

            modelBuilder.Entity("uniexetask.core.Models.Mentor", b =>
                {
                    b.Navigation("MeetingSchedules");
                });

            modelBuilder.Entity("uniexetask.core.Models.Nofitication", b =>
                {
                    b.Navigation("GroupInvites");
                });

            modelBuilder.Entity("uniexetask.core.Models.Project", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Requirements");

                    b.Navigation("Resources");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("uniexetask.core.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("uniexetask.core.Models.Student", b =>
                {
                    b.Navigation("GroupMembers");
                });

            modelBuilder.Entity("uniexetask.core.Models.Subject", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("uniexetask.core.Models.User", b =>
                {
                    b.Navigation("ChatGroupCreatedByNavigations");

                    b.Navigation("ChatGroupOwners");

                    b.Navigation("ChatMessages");

                    b.Navigation("Mentors");

                    b.Navigation("NofiticationReceivers");

                    b.Navigation("NofiticationSenders");

                    b.Navigation("Sponsors");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
